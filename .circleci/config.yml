# Contains two jobs: build and deploy.
# Job `build` is always run to validate code via `python setup.py test`
# Job `deploy` is run for version number tags and uploads DukeDSClient to pypi.
version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/DukeDSClient
    steps:
      - checkout:
          path: ~/DukeDSClient

      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "devRequirements.txt" }}

      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py install
            pip install -r devRequirements.txt
            pip install coveralls
      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}-{{ checksum "devRequirements.txt" }}
          paths:
            - "venv"

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python setup.py test
            flake8 --ignore E501 ddsc/
            coverage run --source=ddsc setup.py test
  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout

      - restore_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}

      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            python setup.py install
            pip install twine

      - save_cache:
          key: v1-dependency-cache-{{ checksum "setup.py" }}
          paths:
            - "venv"

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = $PYPI_USER" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            python setup.py bdist_wheel --universal

      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*

      - run:
          name: Add new spec to helmod repo
          command: |
            . venv/bin/activate
            ./deploy/onpublish.sh

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
